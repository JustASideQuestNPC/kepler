// kepler.input is part of Kepler, a 2D game engine for p5.js
// https://github.com/JustASideQuestNPC/kepler
!function(e){e.INPUT_INCLUDED=!0,e.Key={"left mouse":0,"right mouse":1,"middle mouse":2,backspace:8,tab:9,enter:13,shift:16,control:17,alt:18,pause:19,"caps lock":20,escape:27,spacebar:32,space:32," ":32,"page up":33,"page down":34,end:35,home:36,"left arrow":37,left:37,"up arrow":38,up:38,"right arrow":39,right:39,"down arrow":40,down:40,insert:45,delete:46,0:48,1:49,2:50,3:51,4:52,6:54,7:55,8:56,9:57,";":59,"=":61,a:65,b:66,c:67,d:68,e:69,f:70,g:71,h:72,i:73,j:74,k:75,l:76,m:77,n:78,o:79,p:80,q:81,r:82,s:83,t:84,u:85,v:86,w:87,x:88,y:89,z:90,"numpad 0":96,"numpad 1":97,"numpad 2":98,"numpad 3":99,"numpad 4":100,"numpad 5":101,"numpad 6":102,"numpad 7":103,"numpad 8":104,"numpad 9":105,"numpad *":106,"numpad +":107,"numpad ,":108,"numpad -":109,"numpad .":110,"numpad /":111,f1:112,f2:113,f3:114,f4:115,f5:116,f6:117,f7:118,f8:119,f9:120,f10:121,f11:122,f12:123,"num lock":144,"scroll lock":145,"-":173,",":188,".":190,"/":191,"`":192,"[":219,"\\":220,"]":221,"'":222};let t=Symbol(),s=Object.keys(e.Key);e.Input=class{#a=[];#b;#c={};static makeNew(s,a=!0){let o=new e.Input(t,s);return"function"!=typeof s.keyPressed&&(a?s.keyPressed=()=>{if(o.pressKey(s.keyCode),s.keyCode!==e.Key.f12)return!1}:s.keyPressed=()=>(o.pressKey(s.keyCode),!1)),"function"!=typeof s.keyReleased&&(s.keyReleased=()=>(o.releaseKey(s.keyCode),!1)),"function"!=typeof s.mousePressed&&(s.mousePressed=()=>(o.pressMouse(s.mouseButton),!1)),"function"!=typeof s.mouseReleased&&(s.mouseReleased=()=>(o.releaseMouse(s.mouseButton),!1)),o}constructor(e,a){if(e!==t)throw Error('Input objects cannot be constructed with "new Input" - use "Kepler.Input.makeNew" instead!');for(let o of(this.#b=a,s))this.#a[o]=!1}addAction({name:t,keys:s,mode:a="continuous",chord:o=!1,callback:_=()=>{}}){let u={active:!1,mode:a,chord:o,callback:_};u.keys=Array.from(s,t=>e.Key[t]),u.chord?u.boundKeyPressed=e=>u.keys.every(t=>e[t]):u.boundKeyPressed=e=>u.keys.some(t=>e[t]),"continuous"===u.mode?u.update=e=>{u.active=u.boundKeyPressed(e)}:"press"===u.mode?(u.wasActive=!1,u.update=e=>{u.boundKeyPressed(e)?u.wasActive?u.active=!1:(u.active=!0,u.wasActive=!0):(u.active=!1,u.wasActive=!1)}):(u.wasActive=!0,u.update=e=>{u.boundKeyPressed(e)?(u.active=!1,u.wasActive=!1):u.wasActive?u.active=!1:(u.active=!0,u.wasActive=!0)}),this.#c[t]=u}async loadActionList(e){await this.#b.loadJSON(e,e=>{for(let[t,s]of Object.entries(e))s.name=t,this.addAction(s)})}update(){for(let e of Object.values(this.#c))e.update(this.#a),e.active&&e.callback()}isActive(e){return this.#c[e].active}getKeyState(e){return this.#a[e]}pressKey(e){this.#a[e]=!0}releaseKey(e){this.#a[e]=!1}pressMouse(t){"left"===t?this.#a[e.Key["left mouse"]]=!0:"right"===t?this.#a[e.Key["right mouse"]]=!0:this.#a[e.Key["middle mouse"]]=!0}releaseMouse(t){"left"===t?this.#a[e.Key["left mouse"]]=!1:"right"===t?this.#a[e.Key["right mouse"]]=!1:this.#a[e.Key["middle mouse"]]=!1}}}(window.Kepler=window.Kepler||{});